//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UnitTestProjectTech.ServiceHorario {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Horario", Namespace="http://schemas.datacontract.org/2004/07/ServicesTech.Dominio")]
    [System.SerializableAttribute()]
    public partial class Horario : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceHorario.IServiceHorario")]
    public interface IServiceHorario {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceHorario/ConsultarDisponible", ReplyAction="http://tempuri.org/IServiceHorario/ConsultarDisponibleResponse")]
        UnitTestProjectTech.ServiceHorario.Horario[] ConsultarDisponible();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceHorario/ConsultarDisponible", ReplyAction="http://tempuri.org/IServiceHorario/ConsultarDisponibleResponse")]
        System.Threading.Tasks.Task<UnitTestProjectTech.ServiceHorario.Horario[]> ConsultarDisponibleAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceHorario/RegistrarHorario", ReplyAction="http://tempuri.org/IServiceHorario/RegistrarHorarioResponse")]
        void RegistrarHorario(UnitTestProjectTech.ServiceHorario.Horario horario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceHorario/RegistrarHorario", ReplyAction="http://tempuri.org/IServiceHorario/RegistrarHorarioResponse")]
        System.Threading.Tasks.Task RegistrarHorarioAsync(UnitTestProjectTech.ServiceHorario.Horario horario);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceHorarioChannel : UnitTestProjectTech.ServiceHorario.IServiceHorario, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceHorarioClient : System.ServiceModel.ClientBase<UnitTestProjectTech.ServiceHorario.IServiceHorario>, UnitTestProjectTech.ServiceHorario.IServiceHorario {
        
        public ServiceHorarioClient() {
        }
        
        public ServiceHorarioClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceHorarioClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceHorarioClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceHorarioClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public UnitTestProjectTech.ServiceHorario.Horario[] ConsultarDisponible() {
            return base.Channel.ConsultarDisponible();
        }
        
        public System.Threading.Tasks.Task<UnitTestProjectTech.ServiceHorario.Horario[]> ConsultarDisponibleAsync() {
            return base.Channel.ConsultarDisponibleAsync();
        }
        
        public void RegistrarHorario(UnitTestProjectTech.ServiceHorario.Horario horario) {
            base.Channel.RegistrarHorario(horario);
        }
        
        public System.Threading.Tasks.Task RegistrarHorarioAsync(UnitTestProjectTech.ServiceHorario.Horario horario) {
            return base.Channel.RegistrarHorarioAsync(horario);
        }
    }
}
