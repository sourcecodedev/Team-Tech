//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UnitTestProjectTech.ServiceSolicitud {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Solicitud", Namespace="http://schemas.datacontract.org/2004/07/ServicesTech.Dominio")]
    [System.SerializableAttribute()]
    public partial class Solicitud : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceSolicitud.IServiceSolicitud")]
    public interface IServiceSolicitud {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSolicitud/RegistrarSolicitud", ReplyAction="http://tempuri.org/IServiceSolicitud/RegistrarSolicitudResponse")]
        void RegistrarSolicitud(UnitTestProjectTech.ServiceSolicitud.Solicitud _Solicitud);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSolicitud/RegistrarSolicitud", ReplyAction="http://tempuri.org/IServiceSolicitud/RegistrarSolicitudResponse")]
        System.Threading.Tasks.Task RegistrarSolicitudAsync(UnitTestProjectTech.ServiceSolicitud.Solicitud _Solicitud);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSolicitud/ConsultarSolicitud", ReplyAction="http://tempuri.org/IServiceSolicitud/ConsultarSolicitudResponse")]
        UnitTestProjectTech.ServiceSolicitud.Solicitud[] ConsultarSolicitud();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSolicitud/ConsultarSolicitud", ReplyAction="http://tempuri.org/IServiceSolicitud/ConsultarSolicitudResponse")]
        System.Threading.Tasks.Task<UnitTestProjectTech.ServiceSolicitud.Solicitud[]> ConsultarSolicitudAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSolicitud/ConsultarSolicitudes", ReplyAction="http://tempuri.org/IServiceSolicitud/ConsultarSolicitudesResponse")]
        UnitTestProjectTech.ServiceSolicitud.Solicitud ConsultarSolicitudes(int SolicitudId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSolicitud/ConsultarSolicitudes", ReplyAction="http://tempuri.org/IServiceSolicitud/ConsultarSolicitudesResponse")]
        System.Threading.Tasks.Task<UnitTestProjectTech.ServiceSolicitud.Solicitud> ConsultarSolicitudesAsync(int SolicitudId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceSolicitudChannel : UnitTestProjectTech.ServiceSolicitud.IServiceSolicitud, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceSolicitudClient : System.ServiceModel.ClientBase<UnitTestProjectTech.ServiceSolicitud.IServiceSolicitud>, UnitTestProjectTech.ServiceSolicitud.IServiceSolicitud {
        
        public ServiceSolicitudClient() {
        }
        
        public ServiceSolicitudClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceSolicitudClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceSolicitudClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceSolicitudClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void RegistrarSolicitud(UnitTestProjectTech.ServiceSolicitud.Solicitud _Solicitud) {
            base.Channel.RegistrarSolicitud(_Solicitud);
        }
        
        public System.Threading.Tasks.Task RegistrarSolicitudAsync(UnitTestProjectTech.ServiceSolicitud.Solicitud _Solicitud) {
            return base.Channel.RegistrarSolicitudAsync(_Solicitud);
        }
        
        public UnitTestProjectTech.ServiceSolicitud.Solicitud[] ConsultarSolicitud() {
            return base.Channel.ConsultarSolicitud();
        }
        
        public System.Threading.Tasks.Task<UnitTestProjectTech.ServiceSolicitud.Solicitud[]> ConsultarSolicitudAsync() {
            return base.Channel.ConsultarSolicitudAsync();
        }
        
        public UnitTestProjectTech.ServiceSolicitud.Solicitud ConsultarSolicitudes(int SolicitudId) {
            return base.Channel.ConsultarSolicitudes(SolicitudId);
        }
        
        public System.Threading.Tasks.Task<UnitTestProjectTech.ServiceSolicitud.Solicitud> ConsultarSolicitudesAsync(int SolicitudId) {
            return base.Channel.ConsultarSolicitudesAsync(SolicitudId);
        }
    }
}
