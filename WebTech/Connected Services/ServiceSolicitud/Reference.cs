//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebTech.ServiceSolicitud {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceSolicitud.IServiceSolicitud")]
    public interface IServiceSolicitud {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSolicitud/DoWork", ReplyAction="http://tempuri.org/IServiceSolicitud/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSolicitud/DoWork", ReplyAction="http://tempuri.org/IServiceSolicitud/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceSolicitudChannel : WebTech.ServiceSolicitud.IServiceSolicitud, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceSolicitudClient : System.ServiceModel.ClientBase<WebTech.ServiceSolicitud.IServiceSolicitud>, WebTech.ServiceSolicitud.IServiceSolicitud {
        
        public ServiceSolicitudClient() {
        }
        
        public ServiceSolicitudClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceSolicitudClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceSolicitudClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceSolicitudClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
    }
}
